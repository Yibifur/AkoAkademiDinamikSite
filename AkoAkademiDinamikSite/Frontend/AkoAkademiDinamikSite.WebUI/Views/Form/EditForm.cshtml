@model AddFormElementViewModel
@{
    ViewData["Title"] = "EditForm";
    Layout = "~/Views/AdminLayout/_Adminlayout.cshtml";
    var formId = (int)Convert.ToInt32(ViewContext.RouteData.Values["id"]);
    Form form = (Form)TempData["Form"];
   
}

<style>
    /* CSS stilleriniz burada */
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 20px;
        padding: 10px;
    }

    .top-container {
    }

    .top-info {
        background-color: #3e6fc9;
        color: white;
        text-align: left;
        padding: 1px;
        font-size: 10px;
    }

    .main-container {
        display: flex;
        justify-content: space-around;
        padding: 15px;
    }

    .form-section, .preview-section {
        background-color: #ffffff;
        border: 1px solid #3e6fc9;
        width: 45%;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-header {
        background-color: #3e6fc9;
        font-size: 8px;
        font-family: "Roboto", sans-serif;
        color: #fff;
        padding: 2px;
        border-radius: 4px 4px 0 0;
        text-align: left;
    }

    .form-group {
        padding: 10px 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        font-size: 10px;
    }

    .form-group input[type="text"],
    .form-group input[type="number"],
    .form-group select {
        width: calc(100% - 10px);
        padding: 2px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .form-group input[type="checkbox"] {
        margin-top: 5px;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        padding: 10px 20px;
        background-color: #f1f1f1;
    }

    .btn {
        padding: 8px 15px;
        margin-left: 10px;
        border: none;
        cursor: pointer;
    }

    .btn-cancel {
        background-color: #dc3545;
        color: white;
    }

    .btn-save {
        background-color: #ffc107;
        color: white;
    }

    .save-changes {
        text-align: right;
        margin: 20px;
    }

    .btn-save-changes {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
    }
</style>

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Oluşturucu</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
</head>
<body>
    <div class="top-container">
        <div class="top-info">
            <p>Form Üst Bilgi</p>
        </div>
        <div class="main-container">
            <div id="AddingFormElement"class="form-section">
                <div class="form-header">
                    <h2>Form Oluşturucu</h2>
                </div>
                <form method="post">
                    <div>
                        <input type="hidden" value="@formId" asp-for="FormId" />
                    </div>
                    <div class="form-group">
                        <label>Başlık</label>
                        <input type="text" asp-for="Title" id="baslik">
                    </div>
                    <div class="form-group">
                        <label>Zorunlu Alan</label>
                        <input type="checkbox" asp-for="IsRequired" id="zorunlu-alan">
                    </div>
                    <div class="form-group">
                        <label>Sıra</label>
                        <input type="number" asp-for="Order" id="sira" value="0">
                    </div>
                    <div class="form-group">
                        <label>Kontrol Tipi</label>
                        <select asp-for="ControlType" id="kontrol-tipi" onchange="handleSelectChange()">
                            <option value="Yazı alanı">Yazı alanı</option>
                            <option value="Şıklı seçim">Şıklı seçim</option>
                            <option value="Listeli seçim">Listeli seçim</option>
                            <option value="Numara">Numara</option>
                            <option value="Tarih">Tarih</option>
                            <option value="Email">Email</option>
                            <option value="Başlık">Başlık</option>
                            <option value="Telefon">Telefon</option>
                            <option value="Dosya yükleme">Dosya yükleme</option>
                        </select>
                    </div>
                    <div class="form-actions">
                        <button type="reset" class="btn btn-cancel">Vazgeç</button>
                        <button type="submit" class="btn btn-primary">Form Elemanı Ekle</button>
                    </div>
                </form>
            </div>
           
            <div class="preview-section">
                <div class="form-header">
                    <h2>Form Önizleme</h2>
                </div>
                <div id="form-preview">
                    <!-- Form önizleme alanı buraya gelecek -->
                    @if (form != null)
                    {

                        foreach (var element in form.FormElements.OrderBy(a=>a.Order))
                        {
                            <div class="form-group">
                                <label>@element.Order-@element.Title</label>
                                @{
                                    switch (element.ControlType)
                                    {
                                        case "Yazı alanı":
                                           
                                                        <input type="text" placeholder="yazınını yazın" @(element.IsRequired ? "required" : "") />
                                            break;
                                        case "Şıklı seçim":
                                           
                                            <input type="checkbox" @(element.IsRequired ? "checked" : "") />
                                            break;
                                        case "Listeli seçim":

                                            <select>
                                                @if (element.FormOptions!=null)
                                                {
                                                    @foreach (var item in element.FormOptions)
                                                    {
                                                        <option>@item.Name</option>
                                                    }
                                                }


                                            </select> <button type="button" class="plus-button" onclick="openModal(this)"  data-elementId="@element.FormElementId">Seçenek Ekle</button>
                                            
                                           
                                            break;
                                        case "Numara":
                                          
                                                        <input type="number" />
                                            break;
                                        case "Tarih":
                                                
                                                        <input type="date" />
                                            break;
                                        case "Email":
                                            
                                                        <input type="email" placeholder="example@example.com" />
                                            break;
                                        case "Başlık":
                                           
                                                        <h3>@element.Title</h3>
                                            break;
                                        case "Telefon":
                                           
                                                        <input type="tel" placeholder="+90 555 555 55 55" />
                                            break;
                                        case "Dosya yükleme":
                                        
                                                        <input type="file" />
                                            break;
                                        default:
                                            
                                                        <span>Desteklenmeyen Kontrol Tipi: @element.ControlType</span>
                                            break;
                                    }
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="save-changes">
            <button type="reset" class="btn btn-cancel">Değişiklikleri Kaydet</button>
        </div>
    </div>
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="AddingFormOption" class="option-container">
                        <form id="formOption" method="post">
                            <div class="option-header">
                                <span>Opsiyonlar</span>
                                <button type="button" class="btn-remove">Kaldır</button>
                            </div>
                            <div class="form-group">

                                <input type="text" value="" id="FormElementId" name="FormElementId" />
                            </div>
                            <div class="form-group">
                                <label for="isim">İsim :</label>
                                <input type="text" id="isim" name="Name" placeholder="İsim giriniz" />
                            </div>
                            <div class="form-group">
                                <label for="deger">Değer :</label>
                                <input type="text" id="deger" name="Value" placeholder="Değer giriniz" />
                            </div>
                            <div class="form-group">
                                <label for="sira">Sıra :</label>
                                <input type="number" id="sira" name="Order" placeholder="Sıra giriniz" />
                            </div>
                            <div class="modal-footer">
                                <button type="reset" class="btn btn-secondary btn-cancel" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form> 
                    </div>
                </div>
               
            </div>
        </div>
    </div>

    <script>

        
        function openModal(button) {
            // Modal'ı açar
            $("#exampleModalLong").modal('show'); // Modalı açar

            var value = button.getAttribute('data-elementId');
            var formElement = document.getElementById('FormElementId');
            formElement.value = value;

        }
        function handleFormSubmit(event) {
            // Seçilen kontrol tipini al
            const controlType = document.getElementById('kontrol-tipi').value;

            // Eğer kontrol tipi 'Şıklı seçim' ise başka bir sayfaya yönlendir
            if (controlType === 'Şıklı seçim') {
                event.preventDefault(); // Formun gönderilmesini engelle
                window.location.href = '/FormOption/AddFormOption'; // Yönlendirilecek sayfanın URL'si
                return false; // Form gönderilmesini engelle
            }

            // Diğer durumlar için form gönderimine izin ver
            return true;
        }

        $(document).ready(function () {
            $('#formOption').on('submit', function (e) {
                e.preventDefault(); // Formun normal şekilde gönderilmesini engeller.

                // Form verilerini alıyoruz.
                var formData = $(this).serialize();

                $.ajax({
                    type: 'POST',
                    url: '/FormOption/AddFormOption', // Sunucu tarafında formu işleyecek URL
                    data: formData,
                    success: function (response) {
                        // Başarılı işlem sonrasında yapılacaklar
                        alert('Form başarıyla gönderildi!');
                    },
                    error: function (xhr, status, error) {
                        // Hata durumunda yapılacaklar
                        console.error('AJAX Hatası:', error);
                        console.log('Durum:', status);
                        console.log('Hata Yanıtı:', xhr.responseText);
                        alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                    }
                });
            });
        });
    </script>
</body>
</html>
