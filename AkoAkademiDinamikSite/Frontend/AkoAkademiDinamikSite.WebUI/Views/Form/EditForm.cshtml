@model AddFormElementViewModel
@{
    ViewData["Title"] = "EditForm";
    Layout = "~/Views/AdminLayout/_Adminlayout.cshtml";
    var formId = (int)Convert.ToInt32(ViewContext.RouteData.Values["id"]);
    Form form = (Form)TempData["Form"];
    int? globalFormElementId=1;
   
}

<style>
    /* CSS stilleriniz burada */
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 20px;
        padding: 10px;
    }

    .top-container {
    }

    .top-info {
        background-color: #3e6fc9;
        color: white;
        text-align: left;
        padding: 1px;
        font-size: 10px;
    }

    .main-container {
        display: flex;
        justify-content: space-around;
        padding: 15px;
    }

    .form-section, .preview-section {
        background-color: #ffffff;
        border: 1px solid #3e6fc9;
        width: 45%;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-header {
        background-color: #3e6fc9;
        font-size: 8px;
        font-family: "Roboto", sans-serif;
        color: #fff;
        padding: 2px;
        border-radius: 4px 4px 0 0;
        text-align: left;
    }

    .form-group {
        padding: 10px 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        font-size: 10px;
    }

    .form-group input[type="text"],
    .form-group input[type="number"],
    .form-group select {
        width: calc(100% - 10px);
        padding: 2px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .form-group input[type="checkbox"] {
        margin-top: 5px;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        padding: 10px 20px;
        background-color: #f1f1f1;
    }

    .btn {
        padding: 8px 15px;
        margin-left: 10px;
        border: none;
        cursor: pointer;
    }

    .btn-cancel {
        background-color: #dc3545;
        color: white;
    }

    .btn-save {
        background-color: #ffc107;
        color: white;
    }

    .save-changes {
        text-align: right;
        margin: 20px;
    }

    .btn-save-changes {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
    }
</style>

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Oluşturucu</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
</head>
<body>
    <div class="top-container">
        <div class="top-info">
            <p>Form Üst Bilgi</p>
        </div>
        <div class="main-container">
            <div id="AddingFormElement"class="form-section">
                <div class="form-header">
                    <h2>Form Oluşturucu</h2>
                </div>
                <form method="post">
                    <div>
                        <input type="hidden" value="@formId" asp-for="FormId" />
                    </div>
                    <div class="form-group">
                        <label>Başlık</label>
                        <input type="text" asp-for="Title" id="baslik">
                    </div>
                    <div class="form-group">
                        <label>Zorunlu Alan</label>
                        <input type="checkbox" asp-for="IsRequired" id="zorunlu-alan">
                    </div>
                    <div class="form-group">
                        <label>Sıra</label>
                        <input type="number" asp-for="Order" id="sira" value="0">
                    </div>
                    <div class="form-group">
                        <label>Kontrol Tipi</label>
                        <select asp-for="ControlType" id="kontrol-tipi" onchange="handleSelectChange()">
                            <option value="Yazı alanı">Yazı alanı</option>
                            <option value="Şıklı seçim">Şıklı seçim</option>
                            <option value="Listeli seçim">Listeli seçim</option>
                            <option value="Numara">Numara</option>
                            <option value="Tarih">Tarih</option>
                            <option value="Email">Email</option>
                            <option value="Başlık">Başlık</option>
                            <option value="Telefon">Telefon</option>
                            <option value="Dosya yükleme">Dosya yükleme</option>
                        </select>
                    </div>
                    <div class="form-actions">
                        <button type="reset" class="btn btn-cancel">Vazgeç</button>
                        <button type="submit" class="btn btn-primary">Form Elemanı Ekle</button>
                    </div>
                </form>
            </div>
           
            <div class="preview-section">
                <div class="form-header">
                    <h2>Form Önizleme</h2>
                </div>
                <div id="form-preview">
                    <!-- Form önizleme alanı buraya gelecek -->
                    @if (form != null)
                    {

                        foreach (var element in form.FormElements.OrderBy(a=>a.Order))
                        {
                           
                            <div class="form-group">
                              
                                @{
                                    switch (element.ControlType)
                                    {
                                        case "Yazı alanı":

                                                                            <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                <input type="text" placeholder="Yazınızı yazın" @(element.IsRequired ? "required" : "") />
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Şıklı seçim":
                                            
                                                                            <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                <button type="button" onclick="loadOptionsForRadioButton(@element.FormElementId)">seçenekleri göster</button>

                                                                    <form id="siklisecim-@element.FormElementId">

                                                                    </form><button type="button" class="plus-button" data-controlType="@element.ControlType" data-elementId="@element.FormElementId" onclick="openModal(this)"> Seçenek Ekle</button>
                                                                                <button type="button" class="delete-button"  data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Listeli seçim":
                                                                            <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                            <select id="selectoptions-@element.FormElementId" onclick="loadOptions(@element.FormElementId)">
                                                                    </select> <button type="button" class="plus-button" data-controlType="@element.ControlType" data-elementId="@element.FormElementId" onclick="openModal(this)"> Seçenek Ekle</button>
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                              </div>
                                           
                                            break;
                                        case "Numara":
                                                                            <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <input type="number" />
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Tarih":
                                                                                <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <input type="date" />
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Email":
                                                                                    <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <input type="email" placeholder="example@example.com" />
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Başlık":
                                                                                        <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <h3>@element.Title</h3>
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Telefon":
                                                                                            <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <input type="tel" placeholder="+90 555 555 55 55" />
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        case "Dosya yükleme":
                                                                                                <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <input type="file" />
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                        default:
                                                                                                    <div class="form-element">
                                                                                <label id="labelkisim">@element.Order-@element.Title</label>
                                                                                        <span>Desteklenmeyen Kontrol Tipi: @element.ControlType</span>
                                                                                <button type="button" class="delete-button" data-id="@element.FormElementId" onclick="deleteFormElement(this)">
                                                                                    <i class="fas fa-trash"></i> Sil
                                                                                </button>
                                                                            </div>
                                            break;
                                    }
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="save-changes">
            <button type="reset" class="btn btn-cancel">Değişiklikleri Kaydet</button>
        </div>
    </div>
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="AddingFormOption" class="option-container">
                        <div class="option-header">
                            <span>Opsiyonlar</span>
                            <ul>



                               

                            </ul>
                        </div>
                        <form id="formOption" method="post">
                            
                            <h2>Opsiyon Ekle</h2>
                            <div class="form-group">
                                <input type="hidden" value="" id="FormElementControlType" name="ControlType" />
                            </div>
                            <div class="form-group">
                                <input type="hidden" value="" id="FormElementId" name="FormElementId" />
                            </div>
                            <div class="form-group">
                                <label for="isim">İsim :</label>
                                <input type="text" id="isim" name="Name" placeholder="İsim giriniz" />
                            </div>
                            <div class="form-group">
                                <label for="deger">Değer :</label>
                                <input type="text" id="deger" name="Value" placeholder="Değer giriniz" />
                            </div>
                            <div class="form-group">
                                <label for="sira">Sıra :</label>
                                <input type="number" id="sira" name="Order" placeholder="Sıra giriniz" />
                            </div>
                            <div class="modal-footer">
                                <button type="reset" class="btn btn-secondary btn-cancel" data-dismiss="modal">Close</button>
                                <button type="submit" data-elementId="@globalFormElementId" class="btn btn-primary" onclick="getFormOptionsInMainList(this)">Save changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
   
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            function openModal(button) {
                // Modal'ı açar

                $("#exampleModalLong").modal('show'); // Modalı açar
                debugger
                // Data attribute'den FormElementId değerini al
                var value = button.getAttribute('data-elementId');
                var control = button.getAttribute('data-controlType');
                var formElement = document.getElementById('FormElementId');
            var formControlElement = document.getElementById('FormElementControlType');
                formControlElement.value = control;
                formElement.value = value;
                globalFormElementId = value;

                getFormOptions(value);



            }
            function getFormOptionsInMainList(button) {

                debugger

                // Data attribute'den FormElementId değerini al
                // var value = button.getAttribute('data-elementId');
                value = globalFormElementId;

                getFormOptions(value);






            }

            $(document).ready(function () {
                debugger
                $('#formOption').on('submit', function (e) {
                    e.preventDefault(); // Formun normal şekilde gönderilmesini engeller.

                    // Form verilerini alıyoruz.
                    var formData = $(this).serialize();

                    // AJAX ile formu gönderme
                    $.ajax({
                        type: 'POST',
                        url: '/FormOption/AddFormOption', // Sunucu tarafında formu işleyecek URL
                        data: formData,
                        success: function (response) {
                            // Başarılı işlem sonrasında yapılacaklar
                            if (response.controlType === "Listeli seçim") {
                                var newOption = `<option>${response.name}</option>`;
                                $('#form-preview select').append(newOption);
                            }
                            else {
                            var newOption = `<div class="form-check">
                                                                        <input class="form-check-input" type="radio" name="IsSelected" id="radio1" value="python">
                                                                        <label class="form-check-label" for="radio1">
                                                                            ${response.name}
                                                                        </label>
                                                                    </div>`;
                            var element = $(`siklisecim-${response.formElementId}`);
                                element.append(newOption);

                            }
                            

                            $('#exampleModalLong').modal('hide'); // Modalı kapat
                        },
                        error: function (error) {
                            // Hata durumunda yapılacaklar

                        }
                    });
                });
            });
            

            function deleteFormElement(button) {

                var formElementId = $(button).data('id'); // Butondan FormElementId al

                // AJAX çağrısı
                $.ajax({
                    type: 'POST',
                    url: '/Form/DeleteFormElement', // Silme işlemi için URL
                    data: { id: formElementId }, // Sunucuya gönderilen veri
                    success: function (response) {
                        // Başarılı olduğunda, DOM'dan elemanı kaldır
                        $(button).closest('.form-element').remove();

                    },
                    error: function (error) {
                        // Hata durumunda yapılacaklar
                        alert('Silme işlemi sırasında bir hata oluştu. Lütfen tekrar deneyin.');
                    }
                });
            }
            function deleteFormOption(button) {
                var formElementId = $(button).data('id'); // Butondan FormElementId al

                // AJAX çağrısı
                $.ajax({
                    type: 'POST',
                    url: '/FormOption/DeleteFormOption', // Silme işlemi için URL
                    data: { id: formElementId }, // Sunucuya gönderilen veri
                    success: function (response) {
                        // Başarılı olduğunda, DOM'dan elemanı kaldır
                        // $(button).closest('.form-element').remove();


                        var value = button.getAttribute('data-elementId');

                        globalFormElementId = value;

                        getFormOptions(value);

                    },
                    error: function (error) {
                        // Hata durumunda yapılacaklar

                    }
                });
            }

            function getFormOptions(value) {
                debugger
                $.ajax({
                    type: 'GET',
                    url: `/FormOption/GetFormOptionsByFormElementId/${value}`, // API endpoint
                    success: function (response) {
                        // Başarılı işlem sonrasında yapılacaklar

                        // Verileri sayfada göstermek için
                        var optionsList = $('.option-header ul'); // List elementinin sınıfı veya ID'si ile seçildi
                        optionsList.empty(); // Mevcut listeyi temizle

                        // Gelen verilerle listeyi doldur
                        response.forEach(function (option) {

                            var listItem = `
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            <span>${option.name}</span>
                                            <button type="button" data-id="${option.formOptionId}" data-elementid="${option.formElementId}"  class="btn btn-danger btn-sm btn-remove" onclick="deleteFormOption(this)">
                                                <i class="fas fa-trash-alt"></i> Kaldır
                                            </button>
                                        </li>`;
                            optionsList.append(listItem); // Liste elemanını ekle
                        });
                    },
                    error: function (error) {
                        // Hata durumunda yapılacaklar
                        console.error('Veri alınırken bir hata oluştu:', error);
                        alert('Veri alınırken bir hata oluştu, lütfen tekrar deneyin.');
                    }
                });
            }
        
            function loadOptions(formElementId) {
                // AJAX çağrısı
                $.ajax({
                    type: 'GET',
                    url: `/FormOption/GetFormOptionsByFormElementId/${formElementId}`, // API endpoint
                    success: function (response) {
                        // Başarılı olursa, select öğesini bulup verileri ekleyin
                        var selectElement = $(`#selectoptions-${formElementId}`);
                        selectElement.empty(); // Mevcut seçenekleri temizle

                        // Gelen verilerle seçenekleri doldur
                        response.forEach(function (option) {
                            var optionItem = `<option value="${option.formOptionId}">${option.name}</option>`;
                            selectElement.append(optionItem);
                        });
                    },
                    error: function (error) {
                        // Hata durumunda yapılacaklar
                        console.error('Veri alınırken bir hata oluştu:', error);
                        alert('Veri alınırken bir hata oluştu, lütfen tekrar deneyin.');
                    }
                });
            }
        function loadOptionsForRadioButton(formElementId) {

            debugger
            // AJAX çağrısı
            $.ajax({
                type: 'GET',
                url: `/FormOption/GetFormOptionsByFormElementId/${formElementId}`, // API endpoint
                
                success: function (response) {
                    debugger
                    // Başarılı olursa, select öğesini bulup verileri ekleyin
                    var selectElement = $(`#siklisecim-${formElementId}`);
                    selectElement.empty(); // Mevcut seçenekleri temizle

                    // Gelen verilerle seçenekleri doldur
                    response.forEach(function (option) {
                        debugger
                        var optionItem = `<div class="form-check">
                                                                <input class="form-check-input" type="radio" name="IsSelected" id="radio1" value="python">
                                                                <label class="form-check-label" for="radio1">
                                                                    ${option.name}
                                                                </label>
                                                            </div>`;
                        selectElement.append(optionItem);
                    });
                },
                error: function (error) {
                    // Hata durumunda yapılacaklar
                    console.error('Veri alınırken bir hata oluştu:', error);
                    alert('Veri alınırken bir hata oluştu, lütfen tekrar deneyin.');
                }
            });
        }


        </script>
   
   
</body>
</html>
