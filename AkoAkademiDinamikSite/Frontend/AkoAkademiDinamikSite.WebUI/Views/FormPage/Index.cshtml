@model Form
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/_Adminlayout.cshtml";
}
<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<form method="post" action="/FormPage/SaveFormResponses">
    <input type="hidden" name="FormId" value="@Model.FormId" />

    @foreach (var element in Model.FormElements.OrderBy(a => a.Order))
    {
        <div class="form-group mb-4">
            <input type="hidden" name="FormAnswers[@Model.FormElements.IndexOf(element)].FormElementId" value="@element.FormElementId" />
            <input type="hidden" name="FormAnswers[@Model.FormElements.IndexOf(element)].FormId" value="@Model.FormId" />

            <label class="font-weight-bold">@element.Order - @element.Title</label>
            @{
                switch (element.ControlType)
                {
                    case "Yazı alanı":
                        <input type="text" class="form-control" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" placeholder="Yazınızı yazın" @(element.IsRequired ? "required" : "") />
                        break;

                    case "Şıklı seçim":
                        <div id="siklisecim-@element.FormElementId" class="form-check" name="FormAnswers[@Model.FormElements.IndexOf(element)].Title">
                            @* Radio buttonlar ajax ile doldurulacak *@
                        </div>
                        
                        break;

                    case "Listeli seçim":
                        <select id="selectoptions-@element.FormElementId" class="form-control" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" >
                            @* Seçenekler ajax ile doldurulacak *@
                        </select>
                        break;

                    case "Numara":
                        <input type="number" class="form-control" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" />
                        break;

                    case "Tarih":
                        <input type="date" class="form-control" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" />
                        break;

                    case "Email":
                        <input type="email" class="form-control" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" placeholder="example@example.com" />
                        break;

                    case "Telefon":
                        <input type="tel" class="form-control" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" placeholder="+90 555 555 55 55" />
                        break;

                    case "Dosya yükleme":
                        <input type="file" class="form-control-file" name="FormAnswers[@Model.FormElements.IndexOf(element)].Value" />
                        break;

                    default:
                        <span class="text-danger">Desteklenmeyen Kontrol Tipi: @element.ControlType</span>
                        break;
                }
            }
        </div>
    }

    <div class="form-actions">
        <button type="submit" class="btn btn-primary">Formu Gönder</button>
    </div>
</form>




<script>
    function getValues() {
        

        $.ajax({
            type: 'GET',
            url: `/Form/GetAllFormElements/${@Model.FormId}`, // API endpoint
            success: function (response) {
                response.forEach(function (element) {
                    if (element.controlType === "Şıklı seçim") {
                        debugger
                        var selectElement = $(`#siklisecim-${element.formElementId}`);
                        selectElement.empty(); // Mevcut seçenekleri temizle

                        // FormOptions üzerinde döngü yapılmalı
                        element.formOptions.forEach(function (option) {
                            debugger
                            var optionItem = `<div class="form-check">
                                                        <input class="form-check-input" type="radio" name="IsSelected" id="radio${option.formOptionId}" value="${option.value}">
                                                        <label class="form-check-label" for="radio${option.formOptionId}">
                                                            ${option.name}
                                                        </label>
                                                      </div>`;
                            selectElement.append(optionItem);
                        });
                    } else if (element.controlType === "Listeli seçim") {
                        debugger
                        var selectElement = $(`#selectoptions-${element.formElementId}`);
                        selectElement.empty(); // Mevcut seçenekleri temizle

                        // FormOptions üzerinde döngü yapılmalı
                        element.formOptions.forEach(function (option) {
                            var optionItem = `<option value="${option.value}">${option.name}</option>`;
                            selectElement.append(optionItem);
                        });
                    }
                });
            },
            error: function (error) {
                console.error('Veri alınırken bir hata oluştu:', error);
                alert('Veri alınırken bir hata oluştu, lütfen tekrar deneyin.');
            }
        });
    }
    document.addEventListener("DOMContentLoaded", function () {
        debugger
        getValues();
    });

    function WriteConsole(event){
        console.log("merhaba");

    }
</script>